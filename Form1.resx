<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="txtSets.Text" xml:space="preserve">
    <value>Lorwyn|LRW
Morningtide|MOR    
Betrayers of Kamigawa|BOK
Champions of Kamigawa|CHK
Coldsnap|CSP
Darksteel|DST
Dissension|DIS
Fifth Dawn|5DN
Future Sight|FUT
Guildpact|GPT
Mirrodin|MRD
Ninth Edition|9ED
Planar Chaos|PLC
Ravnica City of Guilds|RAV
Saviors of Kamigawa|SOK
Tenth Edition|10E
Time Spiral|TSP
Time Spiral ""Timeshifted""|TSB
Unglued|UGL
Unhinged|UNH
Shadowmoor|SHM
Eventide|EVE
Shards of Alara|ALA
Astral|ASTRAL
Portal|POR
Tokens|TOK
Mirage|MI
Stronghold|ST
Anthologies|ATH
Tempest|TE
Fourth Edition|4ED
Chronicles|CHR
Eighth Edition|8ED
Torment|TOR
Urza's Legacy|ULG
Mercadian Masques|MMQ
Ice Age|ICE
Portal Three Kingdoms|PTK
Urza's Destiny|UDS
Judgment|JUD
Deckmasters|DKM
Apocalypse|APC
Masters Edition|MED
Onslaught|ONS
Antiquities|ATQ
Homelands|HML
Sixth Edition|6ED
Unlimited|2ED
Planeshift|PLS
Alpha|LEA
Legions|LGN
Legends|LEG
From the Vault: Dragons|DRB
Alliances|ALL
The Dark|DRK
Fifth Edition|5ED
Seventh Edition|7ED
Weatherlight|WTH
Scourge|SCG
Nemesis|NMS
Beta|LEB
Visions|VIS
Elves VS Goblins|EVG
Invasion|INV
Odyssey|ODY
Fallen Empires|FEM
Revised|3ED
Prophecy|PCY
Arabian Nights|ARN
Exodus|EXO
Urza's Saga|USG
Conflux|CFX
Shards: Alara Reborn|ARB
Magic 2010|M10
Jace vs Chandra|JVC
Duel Decks: Divine vs. Demonic|DVD
Zendikar|ZEN
Worldwake|WWK
Rise of the Eldrazi|ROE
Duel Decks: Garruk Vs. Liliana|DDD
Duel Decks: Phyrexia Vs. The Coalition|DDE
Premium Deck Series: Slivers|H09
Scars of Mirrodin|SOM
Magic 2011|M11
Mirrodin Besieged|MBS
New Phyrexia|NPH
Magic 2012|M12
Magic 2013|M13
Innistrad|ISD
Dark Ascension|DKA
Avacyn Restored|AVR
Return to Ravnica|RTR</value>
  </data>
</root>